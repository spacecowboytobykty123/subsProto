// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: subscription/subscription.proto

package subs

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_OK                    Status = 0
	Status_STATUS_INVALID_PLAN          Status = 1
	Status_STATUS_INVALID_USER          Status = 2
	Status_STATUS_ALREADY_SUBSCRIBED    Status = 3
	Status_STATUS_SUBSCRIPTION_NOTFOUND Status = 4
	Status_STATUS_INTERNAL_ERROR        Status = 5
	Status_STATUS_SUBSCRIBED            Status = 6
	Status_STATUS_NOT_SUBSCRIBED        Status = 7
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_OK",
		1: "STATUS_INVALID_PLAN",
		2: "STATUS_INVALID_USER",
		3: "STATUS_ALREADY_SUBSCRIBED",
		4: "STATUS_SUBSCRIPTION_NOTFOUND",
		5: "STATUS_INTERNAL_ERROR",
		6: "STATUS_SUBSCRIBED",
		7: "STATUS_NOT_SUBSCRIBED",
	}
	Status_value = map[string]int32{
		"STATUS_OK":                    0,
		"STATUS_INVALID_PLAN":          1,
		"STATUS_INVALID_USER":          2,
		"STATUS_ALREADY_SUBSCRIBED":    3,
		"STATUS_SUBSCRIPTION_NOTFOUND": 4,
		"STATUS_INTERNAL_ERROR":        5,
		"STATUS_SUBSCRIBED":            6,
		"STATUS_NOT_SUBSCRIBED":        7,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_subscription_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_subscription_subscription_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0}
}

type Duration int32

const (
	Duration_DURATION_UNSPECIFIED Duration = 0
	Duration_DURATION_1_MONTH     Duration = 1
	Duration_DURATION_3_MONTHS    Duration = 3
	Duration_DURATION_6_MONTHS    Duration = 6
	Duration_DURATION_12_MONTHS   Duration = 12
)

// Enum value maps for Duration.
var (
	Duration_name = map[int32]string{
		0:  "DURATION_UNSPECIFIED",
		1:  "DURATION_1_MONTH",
		3:  "DURATION_3_MONTHS",
		6:  "DURATION_6_MONTHS",
		12: "DURATION_12_MONTHS",
	}
	Duration_value = map[string]int32{
		"DURATION_UNSPECIFIED": 0,
		"DURATION_1_MONTH":     1,
		"DURATION_3_MONTHS":    3,
		"DURATION_6_MONTHS":    6,
		"DURATION_12_MONTHS":   12,
	}
)

func (x Duration) Enum() *Duration {
	p := new(Duration)
	*p = x
	return p
}

func (x Duration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Duration) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_subscription_proto_enumTypes[1].Descriptor()
}

func (Duration) Type() protoreflect.EnumType {
	return &file_subscription_subscription_proto_enumTypes[1]
}

func (x Duration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Duration.Descriptor instead.
func (Duration) EnumDescriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{1}
}

type SubsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlanId        int32                  `protobuf:"varint,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubsRequest) Reset() {
	*x = SubsRequest{}
	mi := &file_subscription_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubsRequest) ProtoMessage() {}

func (x *SubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubsRequest.ProtoReflect.Descriptor instead.
func (*SubsRequest) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *SubsRequest) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

type SubsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubId         int64                  `protobuf:"varint,1,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	Status        Status                 `protobuf:"varint,2,opt,name=status,proto3,enum=subscription.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubsResponse) Reset() {
	*x = SubsResponse{}
	mi := &file_subscription_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubsResponse) ProtoMessage() {}

func (x *SubsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubsResponse.ProtoReflect.Descriptor instead.
func (*SubsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *SubsResponse) GetSubId() int64 {
	if x != nil {
		return x.SubId
	}
	return 0
}

func (x *SubsResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_OK
}

type ChangePlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewPlanId     int32                  `protobuf:"varint,1,opt,name=new_plan_id,json=newPlanId,proto3" json:"new_plan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePlanRequest) Reset() {
	*x = ChangePlanRequest{}
	mi := &file_subscription_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlanRequest) ProtoMessage() {}

func (x *ChangePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlanRequest.ProtoReflect.Descriptor instead.
func (*ChangePlanRequest) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *ChangePlanRequest) GetNewPlanId() int32 {
	if x != nil {
		return x.NewPlanId
	}
	return 0
}

type ChangePlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=subscription.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePlanResponse) Reset() {
	*x = ChangePlanResponse{}
	mi := &file_subscription_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlanResponse) ProtoMessage() {}

func (x *ChangePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlanResponse.ProtoReflect.Descriptor instead.
func (*ChangePlanResponse) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *ChangePlanResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_OK
}

type UnSubsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnSubsRequest) Reset() {
	*x = UnSubsRequest{}
	mi := &file_subscription_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnSubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubsRequest) ProtoMessage() {}

func (x *UnSubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubsRequest.ProtoReflect.Descriptor instead.
func (*UnSubsRequest) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{4}
}

type UnSubsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=subscription.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnSubsResponse) Reset() {
	*x = UnSubsResponse{}
	mi := &file_subscription_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnSubsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubsResponse) ProtoMessage() {}

func (x *UnSubsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubsResponse.ProtoReflect.Descriptor instead.
func (*UnSubsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *UnSubsResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_OK
}

type GetSubRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubRequest) Reset() {
	*x = GetSubRequest{}
	mi := &file_subscription_subscription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubRequest) ProtoMessage() {}

func (x *GetSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubRequest.ProtoReflect.Descriptor instead.
func (*GetSubRequest) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{6}
}

type GetSubResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlanId         int32                  `protobuf:"varint,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	PlanName       string                 `protobuf:"bytes,3,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	RemainingLimit int32                  `protobuf:"varint,4,opt,name=remaining_limit,json=remainingLimit,proto3" json:"remaining_limit,omitempty"`
	ExpiresAt      string                 `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSubResponse) Reset() {
	*x = GetSubResponse{}
	mi := &file_subscription_subscription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubResponse) ProtoMessage() {}

func (x *GetSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubResponse.ProtoReflect.Descriptor instead.
func (*GetSubResponse) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSubResponse) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *GetSubResponse) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *GetSubResponse) GetRemainingLimit() int32 {
	if x != nil {
		return x.RemainingLimit
	}
	return 0
}

func (x *GetSubResponse) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

type CheckSubsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckSubsRequest) Reset() {
	*x = CheckSubsRequest{}
	mi := &file_subscription_subscription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckSubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSubsRequest) ProtoMessage() {}

func (x *CheckSubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSubsRequest.ProtoReflect.Descriptor instead.
func (*CheckSubsRequest) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{8}
}

type CheckSubsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubStatus     Status                 `protobuf:"varint,1,opt,name=sub_status,json=subStatus,proto3,enum=subscription.Status" json:"sub_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckSubsResponse) Reset() {
	*x = CheckSubsResponse{}
	mi := &file_subscription_subscription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckSubsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSubsResponse) ProtoMessage() {}

func (x *CheckSubsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSubsResponse.ProtoReflect.Descriptor instead.
func (*CheckSubsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{9}
}

func (x *CheckSubsResponse) GetSubStatus() Status {
	if x != nil {
		return x.SubStatus
	}
	return Status_STATUS_OK
}

type PlansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlansRequest) Reset() {
	*x = PlansRequest{}
	mi := &file_subscription_subscription_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansRequest) ProtoMessage() {}

func (x *PlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansRequest.ProtoReflect.Descriptor instead.
func (*PlansRequest) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{10}
}

type PlansResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plans         []*Plan                `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlansResponse) Reset() {
	*x = PlansResponse{}
	mi := &file_subscription_subscription_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansResponse) ProtoMessage() {}

func (x *PlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansResponse.ProtoReflect.Descriptor instead.
func (*PlansResponse) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{11}
}

func (x *PlansResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type Plan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlanId        int32                  `protobuf:"varint,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RentalLimit   int32                  `protobuf:"varint,4,opt,name=rental_limit,json=rentalLimit,proto3" json:"rental_limit,omitempty"`
	Price         int32                  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Duration      Duration               `protobuf:"varint,6,opt,name=duration,proto3,enum=subscription.Duration" json:"duration,omitempty"` // "1/3/6/12 месяцев"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_subscription_subscription_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_subscription_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_subscription_subscription_proto_rawDescGZIP(), []int{12}
}

func (x *Plan) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *Plan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Plan) GetRentalLimit() int32 {
	if x != nil {
		return x.RentalLimit
	}
	return 0
}

func (x *Plan) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Plan) GetDuration() Duration {
	if x != nil {
		return x.Duration
	}
	return Duration_DURATION_UNSPECIFIED
}

var File_subscription_subscription_proto protoreflect.FileDescriptor

const file_subscription_subscription_proto_rawDesc = "" +
	"\n" +
	"\x1fsubscription/subscription.proto\x12\fsubscription\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"&\n" +
	"\vSubsRequest\x12\x17\n" +
	"\aplan_id\x18\x01 \x01(\x05R\x06planId\"S\n" +
	"\fSubsResponse\x12\x15\n" +
	"\x06sub_id\x18\x01 \x01(\x03R\x05subId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.subscription.StatusR\x06status\"3\n" +
	"\x11ChangePlanRequest\x12\x1e\n" +
	"\vnew_plan_id\x18\x01 \x01(\x05R\tnewPlanId\"B\n" +
	"\x12ChangePlanResponse\x12,\n" +
	"\x06status\x18\x01 \x01(\x0e2\x14.subscription.StatusR\x06status\"\x0f\n" +
	"\rUnSubsRequest\">\n" +
	"\x0eUnSubsResponse\x12,\n" +
	"\x06status\x18\x01 \x01(\x0e2\x14.subscription.StatusR\x06status\"\x0f\n" +
	"\rGetSubRequest\"\xa7\x01\n" +
	"\x0eGetSubResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x17\n" +
	"\aplan_id\x18\x02 \x01(\x05R\x06planId\x12\x1b\n" +
	"\tplan_name\x18\x03 \x01(\tR\bplanName\x12'\n" +
	"\x0fremaining_limit\x18\x04 \x01(\x05R\x0eremainingLimit\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\tR\texpiresAt\"\x12\n" +
	"\x10CheckSubsRequest\"H\n" +
	"\x11CheckSubsResponse\x123\n" +
	"\n" +
	"sub_status\x18\x01 \x01(\x0e2\x14.subscription.StatusR\tsubStatus\"\x0e\n" +
	"\fPlansRequest\"9\n" +
	"\rPlansResponse\x12(\n" +
	"\x05plans\x18\x01 \x03(\v2\x12.subscription.PlanR\x05plans\"\xc2\x01\n" +
	"\x04Plan\x12\x17\n" +
	"\aplan_id\x18\x01 \x01(\x05R\x06planId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\frental_limit\x18\x04 \x01(\x05R\vrentalLimit\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x05R\x05price\x122\n" +
	"\bduration\x18\x06 \x01(\x0e2\x16.subscription.DurationR\bduration*\xd7\x01\n" +
	"\x06Status\x12\r\n" +
	"\tSTATUS_OK\x10\x00\x12\x17\n" +
	"\x13STATUS_INVALID_PLAN\x10\x01\x12\x17\n" +
	"\x13STATUS_INVALID_USER\x10\x02\x12\x1d\n" +
	"\x19STATUS_ALREADY_SUBSCRIBED\x10\x03\x12 \n" +
	"\x1cSTATUS_SUBSCRIPTION_NOTFOUND\x10\x04\x12\x19\n" +
	"\x15STATUS_INTERNAL_ERROR\x10\x05\x12\x15\n" +
	"\x11STATUS_SUBSCRIBED\x10\x06\x12\x19\n" +
	"\x15STATUS_NOT_SUBSCRIBED\x10\a*\x80\x01\n" +
	"\bDuration\x12\x18\n" +
	"\x14DURATION_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10DURATION_1_MONTH\x10\x01\x12\x15\n" +
	"\x11DURATION_3_MONTHS\x10\x03\x12\x15\n" +
	"\x11DURATION_6_MONTHS\x10\x06\x12\x16\n" +
	"\x12DURATION_12_MONTHS\x10\f2\x8c\x05\n" +
	"\x13SubscriptionService\x12`\n" +
	"\tSubscribe\x12\x19.subscription.SubsRequest\x1a\x1a.subscription.SubsResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/subscriptions\x12v\n" +
	"\x0eChangeSubsPlan\x12\x1f.subscription.ChangePlanRequest\x1a .subscription.ChangePlanResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*2\x16/v1/subscriptions/plan\x12c\n" +
	"\vUnsubscribe\x12\x1b.subscription.UnSubsRequest\x1a\x1c.subscription.UnSubsResponse\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/subscriptions\x12e\n" +
	"\rGetSubDetails\x12\x1b.subscription.GetSubRequest\x1a\x1c.subscription.GetSubResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/subscriptions\x12v\n" +
	"\x11CheckSubscription\x12\x1e.subscription.CheckSubsRequest\x1a\x1f.subscription.CheckSubsResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/subscriptions/status\x12W\n" +
	"\tListPlans\x12\x1a.subscription.PlansRequest\x1a\x1b.subscription.PlansResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/plans2\xd9\x03\n" +
	"\fSubscription\x12B\n" +
	"\tSubscribe\x12\x19.subscription.SubsRequest\x1a\x1a.subscription.SubsResponse\x12S\n" +
	"\x0eChangeSubsPlan\x12\x1f.subscription.ChangePlanRequest\x1a .subscription.ChangePlanResponse\x12H\n" +
	"\vUnsubscribe\x12\x1b.subscription.UnSubsRequest\x1a\x1c.subscription.UnSubsResponse\x12J\n" +
	"\rGetSubDetails\x12\x1b.subscription.GetSubRequest\x1a\x1c.subscription.GetSubResponse\x12T\n" +
	"\x11CheckSubscription\x12\x1e.subscription.CheckSubsRequest\x1a\x1f.subscription.CheckSubsResponse\x12D\n" +
	"\tListPlans\x12\x1a.subscription.PlansRequest\x1a\x1b.subscription.PlansResponseB\xc0\x01\x92A\xad\x01\x12\x83\x01\n" +
	"\x10Subscription API\x12-Manage user subscriptions and available plans\";\n" +
	"\aSupport\x12\x1bhttps://example.com/support\x1a\x13support@example.com2\x031.0*\x01\x012\x10application/json:\x10application/jsonZ\rtsubs.v1;subsb\x06proto3"

var (
	file_subscription_subscription_proto_rawDescOnce sync.Once
	file_subscription_subscription_proto_rawDescData []byte
)

func file_subscription_subscription_proto_rawDescGZIP() []byte {
	file_subscription_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subscription_subscription_proto_rawDesc), len(file_subscription_subscription_proto_rawDesc)))
	})
	return file_subscription_subscription_proto_rawDescData
}

var file_subscription_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_subscription_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_subscription_subscription_proto_goTypes = []any{
	(Status)(0),                // 0: subscription.Status
	(Duration)(0),              // 1: subscription.Duration
	(*SubsRequest)(nil),        // 2: subscription.SubsRequest
	(*SubsResponse)(nil),       // 3: subscription.SubsResponse
	(*ChangePlanRequest)(nil),  // 4: subscription.ChangePlanRequest
	(*ChangePlanResponse)(nil), // 5: subscription.ChangePlanResponse
	(*UnSubsRequest)(nil),      // 6: subscription.UnSubsRequest
	(*UnSubsResponse)(nil),     // 7: subscription.UnSubsResponse
	(*GetSubRequest)(nil),      // 8: subscription.GetSubRequest
	(*GetSubResponse)(nil),     // 9: subscription.GetSubResponse
	(*CheckSubsRequest)(nil),   // 10: subscription.CheckSubsRequest
	(*CheckSubsResponse)(nil),  // 11: subscription.CheckSubsResponse
	(*PlansRequest)(nil),       // 12: subscription.PlansRequest
	(*PlansResponse)(nil),      // 13: subscription.PlansResponse
	(*Plan)(nil),               // 14: subscription.Plan
}
var file_subscription_subscription_proto_depIdxs = []int32{
	0,  // 0: subscription.SubsResponse.status:type_name -> subscription.Status
	0,  // 1: subscription.ChangePlanResponse.status:type_name -> subscription.Status
	0,  // 2: subscription.UnSubsResponse.status:type_name -> subscription.Status
	0,  // 3: subscription.CheckSubsResponse.sub_status:type_name -> subscription.Status
	14, // 4: subscription.PlansResponse.plans:type_name -> subscription.Plan
	1,  // 5: subscription.Plan.duration:type_name -> subscription.Duration
	2,  // 6: subscription.SubscriptionService.Subscribe:input_type -> subscription.SubsRequest
	4,  // 7: subscription.SubscriptionService.ChangeSubsPlan:input_type -> subscription.ChangePlanRequest
	6,  // 8: subscription.SubscriptionService.Unsubscribe:input_type -> subscription.UnSubsRequest
	8,  // 9: subscription.SubscriptionService.GetSubDetails:input_type -> subscription.GetSubRequest
	10, // 10: subscription.SubscriptionService.CheckSubscription:input_type -> subscription.CheckSubsRequest
	12, // 11: subscription.SubscriptionService.ListPlans:input_type -> subscription.PlansRequest
	2,  // 12: subscription.Subscription.Subscribe:input_type -> subscription.SubsRequest
	4,  // 13: subscription.Subscription.ChangeSubsPlan:input_type -> subscription.ChangePlanRequest
	6,  // 14: subscription.Subscription.Unsubscribe:input_type -> subscription.UnSubsRequest
	8,  // 15: subscription.Subscription.GetSubDetails:input_type -> subscription.GetSubRequest
	10, // 16: subscription.Subscription.CheckSubscription:input_type -> subscription.CheckSubsRequest
	12, // 17: subscription.Subscription.ListPlans:input_type -> subscription.PlansRequest
	3,  // 18: subscription.SubscriptionService.Subscribe:output_type -> subscription.SubsResponse
	5,  // 19: subscription.SubscriptionService.ChangeSubsPlan:output_type -> subscription.ChangePlanResponse
	7,  // 20: subscription.SubscriptionService.Unsubscribe:output_type -> subscription.UnSubsResponse
	9,  // 21: subscription.SubscriptionService.GetSubDetails:output_type -> subscription.GetSubResponse
	11, // 22: subscription.SubscriptionService.CheckSubscription:output_type -> subscription.CheckSubsResponse
	13, // 23: subscription.SubscriptionService.ListPlans:output_type -> subscription.PlansResponse
	3,  // 24: subscription.Subscription.Subscribe:output_type -> subscription.SubsResponse
	5,  // 25: subscription.Subscription.ChangeSubsPlan:output_type -> subscription.ChangePlanResponse
	7,  // 26: subscription.Subscription.Unsubscribe:output_type -> subscription.UnSubsResponse
	9,  // 27: subscription.Subscription.GetSubDetails:output_type -> subscription.GetSubResponse
	11, // 28: subscription.Subscription.CheckSubscription:output_type -> subscription.CheckSubsResponse
	13, // 29: subscription.Subscription.ListPlans:output_type -> subscription.PlansResponse
	18, // [18:30] is the sub-list for method output_type
	6,  // [6:18] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_subscription_subscription_proto_init() }
func file_subscription_subscription_proto_init() {
	if File_subscription_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subscription_subscription_proto_rawDesc), len(file_subscription_subscription_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_subscription_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_subscription_proto_depIdxs,
		EnumInfos:         file_subscription_subscription_proto_enumTypes,
		MessageInfos:      file_subscription_subscription_proto_msgTypes,
	}.Build()
	File_subscription_subscription_proto = out.File
	file_subscription_subscription_proto_goTypes = nil
	file_subscription_subscription_proto_depIdxs = nil
}
